{
  name: 'level-grammar',
  stages:
  [{ name: 'init',
     limit: 1,
     rules: [
       // replace init--node with start-->end
       { lhs: { node: [{ id: "init", label: { name: "init" } },
                       { id: "node", label: { name: "node" } }],
                edge: [{ v: "init", w: "node", label: { name: "edge" } },
                       { v: "node", w: "init", label: { name: "edge" } }] },
         rhs: { node: [{ id: "start", head:["init"], tail:["init"], label: { $merge: [ { $eval: '$init.label' },
                                                                                       { name: "start" }] } },
                       { id: "end", head:["node"], tail:["node"], label: { $merge: [ { $eval: '$node.label' },
                                                                                     { name: "end",
                                                                                       endpoint: true }] } }],
                edge: [{ v: "start", w: "end", label: { name: "path" } }] } }
     ] },
       
   { name: 'extend',
     rules: [
       // replace b--x with mid-->end  where b is an endpoint
       { weight: 2,
	 lhs: { node: [{ id: "b", label: { endpoint: true } },
                       { id: "x", label: { name: "node" } }],
                edge: [{ v: "b", w: "x", label: { name: "edge" } },
		       { v: "x", w: "b", label: { name: "edge" } }] },
         rhs: { node: [{ id: "mid", head:["b"], tail:["b"], label: { $merge: [ { $eval: '$b.label' },
                                                                               { name: "room" } ] } },
                       { id: "end", head:["x"], tail:["x"], label: { $merge: [ { $eval: '$x.label' },
                                                                               { name: '${b.label.name}' } ] } }],
                edge: [{ v: "mid", w: "end", label: { name: "path" } }] } },

       // replace x--a-->... with herring<--a-->...
       { weight: .25,
         limit: 2,
	 lhs: { node: [{ id: "a", label: { $and: [{ $not: { name: "node" } },
                                                  { $not: { endpoint: true } }] } },
                       { id: "x", label: { name: "node" } }],
                edge: [{ v: "a", w: "x", label: { name: "edge" } },
		       { v: "x", w: "a", label: { name: "edge" } }] },
         rhs: { node: [{ id: "a" },
                       { id: "side", head:["x"], tail:["x"], label: { $merge: [ { $eval: '$x.label' },
                                                                                { name: 'herring',
                                                                                  endpoint: true } ] } }],
                edge: [{ v: "a", w: "side", label: { name: "path" } }] } },
       
       // replace a->d with a->d
       //         |  |      |  ^
       //         |  |      v  |
       //         x--y      b->c

       // wrinkle in path (no a->d connection on rhs)
       { lhs: { node: [{ id: "a", label: { $not: { name: "node" } } },
                       { id: "d", label: { $not: { name: "node" } } },
                       { id: "x", label: { name: "node" } },
                       { id: "y", label: { name: "node" } }],
                edge: [{ v: "a", w: "d", label: { name: "path" } },
		       { v: "a", w: "x", label: { name: "edge" } },
		       { v: "x", w: "a", label: { name: "edge" } },
		       { v: "x", w: "y", label: { name: "edge" } },
		       { v: "y", w: "x", label: { name: "edge" } },
		       { v: "y", w: "d", label: { name: "edge" } },
		       { v: "d", w: "y", label: { name: "edge" } }] },
         rhs: { node: [{ id: "a" },
                       { id: "d" },
                       { id: "b", head:["x"], tail:["x"], label: { $merge: [{ $eval: '$x.label' },
                                                                            { name: "room" }] } },
                       { id: "c", head:["y"], tail:["y"], label: { $merge: [{ $eval: '$y.label' },
                                                                            { name: "room" }] } }],
                edge: [{ v: "a", w: "b", label: { name: "path" } },
		       { v: "b", w: "c", label: { name: "path" } },
		       { v: "c", w: "d", label: { name: "path" } }] } },

       // fork: a->d splits to a->d->c and a->b->c. endpoint moves from d to c
       { weight: .1,
         limit: 4,
         lhs: { node: [{ id: "a", label: { $not: { name: "node" } } },
                       { id: "d", label: { endpoint: true } },
                       { id: "x", label: { name: "node" } },
                       { id: "y", label: { name: "node" } }],
                edge: [{ v: "a", w: "d", label: { name: "path" } },
		       { v: "a", w: "x", label: { name: "edge" } },
		       { v: "x", w: "a", label: { name: "edge" } },
		       { v: "x", w: "y", label: { name: "edge" } },
		       { v: "y", w: "x", label: { name: "edge" } },
		       { v: "y", w: "d", label: { name: "edge" } },
		       { v: "d", w: "y", label: { name: "edge" } }] },
         rhs: { node: [{ id: "a" },
                       { id: "d2", head:["d"], tail:["d"], label: { $merge: [ { $eval: '$d.label' },
                                                                              { name: "room" } ] } },
                       { id: "b", head:["x"], tail:["x"], label: { $merge: [ { $eval: '$x.label' },
                                                                             { name: "room" } ] } },
                       { id: "c", head:["y"], tail:["y"], label: { $merge: [ { $eval: '$y.label' },
                                                                             { name: '${d.label.name}' } ] } }],
                edge: [{ v: "a", w: "b", label: { name: "fork", dot: { style: "dotted" } } },
		       { v: "b", w: "c", label: { name: "path" } },
		       { v: "a", w: "d2", label: { name: "fork", dot: { style: "dotted" } } },
		       { v: "d2", w: "c", label: { name: "path" } }] } },

       
       // cave: a->b->c adds a corner d
       { weight: 1,
         limit: 4,
         lhs: { node: [{ id: "a", label: { $not: { name: "node" } } },
                       { id: "b", label: { $not: { name: "node" } } },
                       { id: "c", label: { $not: { name: "node" } } },
                       { id: "x", label: { name: "node" } }],
                edge: [{ v: "a", w: "b", label: { $or: [ { name: "path" }, { name: "cave" } ] } },
		       { v: "b", w: "c", label: { $or: [ { name: "path" }, { name: "cave" } ] } },
		       { v: "a", w: "x", label: { name: "edge" } },
		       { v: "x", w: "a", label: { name: "edge" } },
		       { v: "c", w: "x", label: { name: "edge" } },
		       { v: "x", w: "c", label: { name: "edge" } }] },
         rhs: { node: [{ id: "a" },
                       { id: "b" },
                       { id: "c" },
                       { id: "d", head:["x"], tail:["x"], label: { $merge: [ { $eval: '$x.label' },
                                                                             { name: "room" } ] } }],
                edge: [{ v: "a", w: "b", label: { name: "cave", dot: { style: "dotted" } } },
		       { v: "b", w: "c", label: { name: "cave", dot: { style: "dotted" } } },
		       { v: "a", w: "d", label: { name: "cave", dot: { style: "dotted" } } },
		       { v: "d", w: "c", label: { name: "cave", dot: { style: "dotted" } } },
		       { v: "a", w: "c", label: { dot: { style: "dotted" } } },
		       { v: "b", w: "d", label: { dot: { style: "dotted" } } }] } },

       // shortcut
       { limit: 3,
	 lhs: { node: [{ id: "a", label: { $not: { name: "node" } } },
                       { id: "d", label: { $not: { name: "node" } } },
                       { id: "x", label: { name: "node" } },
                       { id: "y", label: { name: "node" } }],
                edge: [{ v: "a", w: "d", label: { name: "path" } },
		       { v: "a", w: "x", label: { name: "edge" } },
		       { v: "x", w: "a", label: { name: "edge" } },
		       { v: "x", w: "y", label: { name: "edge" } },
		       { v: "y", w: "x", label: { name: "edge" } },
		       { v: "y", w: "d", label: { name: "edge" } },
		       { v: "d", w: "y", label: { name: "edge" } }] },
         rhs: { node: [{ id: "a" },
                       { id: "d" },
                       { id: "b", head:["x"], tail:["x"], label: { $merge: [ { $eval: '$x.label' },
                                                                             { name: "room" } ] } },
                       { id: "c", head:["y"], tail:["y"], label: { $merge: [ { $eval: '$y.label' },
                                                                             { name: "room" } ] } }],
                edge: [{ v: "a", w: "d", label: { name: "shortcut", dot: { style: "dotted" } } },
		       { v: "a", w: "b", label: { name: "path" } },
		       { v: "b", w: "c", label: { name: "path" } },
		       { v: "c", w: "d", label: { name: "path" } }] } },

       // valves to side quest
       { limit: 3,
	 lhs: { node: [{ id: "a", label: { $not: { name: "node" } } },
                       { id: "d", label: { $not: { name: "node" } } },
                       { id: "x", label: { name: "node" } },
                       { id: "y", label: { name: "node" } }],
                edge: [{ v: "a", w: "d", label: { name: "path" } },
		       { v: "a", w: "x", label: { name: "edge" } },
		       { v: "x", w: "a", label: { name: "edge" } },
		       { v: "x", w: "y", label: { name: "edge" } },
		       { v: "y", w: "x", label: { name: "edge" } },
		       { v: "y", w: "d", label: { name: "edge" } },
		       { v: "d", w: "y", label: { name: "edge" } }] },
         rhs: { node: [{ id: "a" },
                       { id: "d" },
                       { id: "b", head:["x"], tail:["x"], label: { $merge: [ { $eval: '$x.label' },
                                                                             { name: "room" } ] } },
                       { id: "c", head:["y"], tail:["y"], label: { $merge: [ { $eval: '$y.label' },
                                                                             { name: "room" } ] } }],
                edge: [{ v: "a", w: "d", label: { name: "path" } },
		       { v: "a", w: "b", label: { name: "valve", dot: { style: "dotted" } } },
		       { v: "b", w: "c", label: { name: "path" } },
		       { v: "c", w: "d", label: { name: "valve", dot: { style: "dotted" } } }] } },

       // key-door
       { limit: 1,
	 weight: .5,
	 lhs: { node: [{ id: "a", label: { $not: { name: "node" } } },
                       { id: "d", label: { $not: { name: "node" } } },
                       { id: "x", label: { name: "node" } },
                       { id: "y", label: { name: "node" } }],
                edge: [{ v: "a", w: "d", label: { name: "path" } },
		       { v: "a", w: "x", label: { name: "edge" } },
		       { v: "x", w: "a", label: { name: "edge" } },
		       { v: "x", w: "y", label: { name: "edge" } },
		       { v: "y", w: "x", label: { name: "edge" } },
		       { v: "y", w: "d", label: { name: "edge" } },
		       { v: "d", w: "y", label: { name: "edge" } }] },
         rhs: { node: [{ id: "a" },
                       { id: "d" },
                       { id: "b", head:["x"], tail:["x"], label: { $merge: [ { $eval: '$x.label' },
                                                                             { name: "room" } ] } },
                       { id: "c", head:["y"], tail:["y"], label: { $merge: [ { $eval: '$y.label' },
                                                                             { name: "room" } ] } }],
                edge: [{ v: "a", w: "d", label: { name: "lock", dot: { style: "dotted" } } },
		       { v: "a", w: "c", label: { name: "key", dot: { style: "dotted" } } },
		       { v: "a", w: "b", label: { name: "path" } },
		       { v: "b", w: "c", label: { name: "path" } },
		       { v: "c", w: "a", label: { name: "valve", dot: { style: "dashed" } } }] } },
       
     ] },
   
  { name: 'trim',
     rules: [
       { lhs: { node: [{ id: "a" },
                       { id: "b" }],
                edge: [{ v: "a", w: "b", label: { name: "edge" } }] },
         rhs: { node: [{ id: "a" },
                       { id: "b" }],
                edge: [] } }
     ] }
  ]
}
